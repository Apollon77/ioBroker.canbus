{"version":3,"file":"string.js","sourceRoot":"/","sources":["parsers/string.ts"],"names":[],"mappings":";;;AACA,iCAAoC;AAEpC;;GAEG;AACH,MAAa,YAAa,SAAQ,iBAAU;IAM1C,YAAY,OAAsB,EAAE,YAAiD;QACnF,KAAK,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,GAAW;QAC3B,IAAI;YACF,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAC5G;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,GAAW,EAAE,GAAW;QACzC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzF,IAAI;YACF,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACjE;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;;AA1BH,oCA2BC;AAzB2B,6BAAgB,GAAqC;IAC7E,QAAQ;CACT,CAAC","sourcesContent":["import { CanBusAdapter } from '../main';\nimport { ParserBase } from './base';\n\n/**\n * Parser for handling of string values.\n */\nexport class ParserString extends ParserBase {\n\n  protected static readonly handledDataTypes: ioBroker.AdapterConfigDataType[] = [\n    'string'\n  ];\n\n  constructor(adapter: CanBusAdapter, parserConfig: ioBroker.AdapterConfigMessageParser) {\n    super(adapter, parserConfig);\n  }\n\n  public async read(buf: Buffer): Promise<string | Error> {\n    try {\n      return buf.toString(this.cfg.dataEncoding, this.cfg.dataOffset, this.cfg.dataOffset + this.cfg.dataLength);\n    } catch (err) {\n      return err;\n    }\n  }\n\n  public async write(buf: Buffer, val: string): Promise<Buffer | Error> {\n    const len = Math.min(Buffer.byteLength(val, this.cfg.dataEncoding), this.cfg.dataLength);\n    try {\n      buf.write(val, this.cfg.dataOffset, len, this.cfg.dataEncoding);\n    } catch (err) {\n      return err;\n    }\n    return buf;\n  }\n}"]}